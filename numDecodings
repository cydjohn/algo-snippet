class Solution {
    public int numDecodings(String s) {
        if (s == null || s.length() == 0) return 0;
        char[] c = s.toCharArray();
        long[] dp = new long[s.length()+1];
        dp[0] = 1;
        if (c[0] == '0') return 0;
        else dp[1] = c[0] == '*' ? 9 : 1;
        for (int i = 1; i < c.length; i++) {
            if (c[i] == '0') {
                if (c[i-1] == '0' || c[i-1] > '2') return 0;
                else if (c[i-1] == '*') dp[i+1] = dp[i-1] * 2;
                else dp[i+1] = dp[i-1];
            } else if (c[i] == '*') {
                if (c[i-1] == '0' || c[i-1] > '2') dp[i+1] = dp[i] * 9;
                else if (c[i-1] == '1') dp[i+1] = (dp[i] + dp[i-1]) * 9;
                else if (c[i-1] == '2') dp[i+1] = dp[i] * 9 + dp[i-1] * 6;
                else dp[i+1] = dp[i] * 9 + dp[i-1] * 15;
            } else if (c[i] > '6') {
                if (c[i-1] == '0' || c[i-1] > '1') dp[i+1] = dp[i];
                else dp[i+1] = dp[i] + dp[i-1];
            } else {
                if (c[i-1] == '*') dp[i+1] = dp[i] + dp[i-1] * 2;
                else if (c[i-1] == '0' || c[i-1] > '2') dp[i+1] = dp[i];
                else dp[i+1] = dp[i] + dp[i-1];
            }
            dp[i+1] = (long) (dp[i+1] % (1e9+7));
        }
        return (int)dp[c.length];
    }
}
